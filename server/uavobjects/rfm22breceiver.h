/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup RFM22BReceiver RFM22BReceiver
 * @brief A receiver channel group carried over the RFM22B radio.
 *
 *
 * @file       rfm22breceiver.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015
 * @brief      Include files for the RFM22BReceiver object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: rfm22breceiver.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef RFM22BRECEIVER_H
#define RFM22BRECEIVER_H

#include "pios_queue.h"
#include "uavoversion.h"



// Object constants
#define RFM22BRECEIVER_OBJID 0xDEECD7B6
#define RFM22BRECEIVER_ISSINGLEINST 1
#define RFM22BRECEIVER_ISSETTINGS 0
#define RFM22BRECEIVER_NUMBYTES 16

// Generic interface functions
int32_t RFM22BReceiverInitialize();
UAVObjHandle RFM22BReceiverHandle();
void RFM22BReceiverSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    int16_t Channel[8];

} __attribute__((packed)) __attribute__((aligned(4))) RFM22BReceiverData;

// Typesafe Object access functions
/**
 * @function RFM22BReceiverGet(dataOut)
 * @brief Populate a RFM22BReceiverData object
 * @param[out] dataOut 
 */
static inline int32_t RFM22BReceiverGet(RFM22BReceiverData *dataOut) { return UAVObjGetData(RFM22BReceiverHandle(), dataOut); }

static inline int32_t RFM22BReceiverSet(const RFM22BReceiverData *dataIn) { return UAVObjSetData(RFM22BReceiverHandle(), dataIn); }

static inline int32_t RFM22BReceiverInstGet(uint16_t instId, RFM22BReceiverData *dataOut) { return UAVObjGetInstanceData(RFM22BReceiverHandle(), instId, dataOut); }

static inline int32_t RFM22BReceiverInstSet(uint16_t instId, const RFM22BReceiverData *dataIn) { return UAVObjSetInstanceData(RFM22BReceiverHandle(), instId, dataIn); }

static inline int32_t RFM22BReceiverConnectQueue(struct pios_queue *queue) { return UAVObjConnectQueue(RFM22BReceiverHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t RFM22BReceiverConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(RFM22BReceiverHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t RFM22BReceiverCreateInstance() { return UAVObjCreateInstance(RFM22BReceiverHandle(), &RFM22BReceiverSetDefaults); }

static inline void RFM22BReceiverRequestUpdate() { UAVObjRequestUpdate(RFM22BReceiverHandle()); }

static inline void RFM22BReceiverRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(RFM22BReceiverHandle(), instId); }

static inline void RFM22BReceiverUpdated() { UAVObjUpdated(RFM22BReceiverHandle()); }

static inline void RFM22BReceiverInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(RFM22BReceiverHandle(), instId); }

static inline int32_t RFM22BReceiverGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(RFM22BReceiverHandle(), dataOut); }

static inline int32_t RFM22BReceiverSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(RFM22BReceiverHandle(), dataIn); }

static inline int8_t RFM22BReceiverReadOnly() { return UAVObjReadOnly(RFM22BReceiverHandle()); }

static inline uint16_t RFM22BReceiverGetNumInstances(){ return UAVObjGetNumInstances(RFM22BReceiverHandle()); }

static inline uint32_t RFM22BReceiverGetNumBytes(){ return UAVObjGetNumBytes(RFM22BReceiverHandle()); }

// Field information
// Field Channel information
/* Number of elements for field Channel */
#define RFM22BRECEIVER_CHANNEL_NUMELEM 8


// set/Get functions
extern void RFM22BReceiverChannelSet( int16_t *NewChannel );
extern void RFM22BReceiverChannelGet( int16_t *NewChannel );


#endif // RFM22BRECEIVER_H

/**
 * @}
 * @}
 */
