/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup StateEstimation StateEstimation
 * @brief Settings for how to estimate the state
 *
 *
 * @file       stateestimation.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013
 * @brief      Include files for the StateEstimation object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: stateestimation.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STATEESTIMATION_H
#define STATEESTIMATION_H

// Object constants
#define STATEESTIMATION_OBJID 0xBA09F7C2
#define STATEESTIMATION_ISSINGLEINST 1
#define STATEESTIMATION_ISSETTINGS 1
#define STATEESTIMATION_NUMBYTES 2

// Generic interface functions
int32_t StateEstimationInitialize();
UAVObjHandle StateEstimationHandle();
void StateEstimationSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    uint8_t AttitudeFilter;
    uint8_t NavigationFilter;

} __attribute__((packed)) __attribute__((aligned(4))) StateEstimationData;

// Typesafe Object access functions
/**
 * @function StateEstimationGet(dataOut)
 * @brief Populate a StateEstimationData object
 * @param[out] dataOut 
 */
static inline int32_t StateEstimationGet(StateEstimationData *dataOut) { return UAVObjGetData(StateEstimationHandle(), dataOut); }

static inline int32_t StateEstimationSet(const StateEstimationData *dataIn) { return UAVObjSetData(StateEstimationHandle(), dataIn); }

static inline int32_t StateEstimationInstGet(uint16_t instId, StateEstimationData *dataOut) { return UAVObjGetInstanceData(StateEstimationHandle(), instId, dataOut); }

static inline int32_t StateEstimationInstSet(uint16_t instId, const StateEstimationData *dataIn) { return UAVObjSetInstanceData(StateEstimationHandle(), instId, dataIn); }

static inline int32_t StateEstimationConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(StateEstimationHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t StateEstimationConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(StateEstimationHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t StateEstimationCreateInstance() { return UAVObjCreateInstance(StateEstimationHandle(), &StateEstimationSetDefaults); }

static inline void StateEstimationRequestUpdate() { UAVObjRequestUpdate(StateEstimationHandle()); }

static inline void StateEstimationRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(StateEstimationHandle(), instId); }

static inline void StateEstimationUpdated() { UAVObjUpdated(StateEstimationHandle()); }

static inline void StateEstimationInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(StateEstimationHandle(), instId); }

static inline int32_t StateEstimationGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(StateEstimationHandle(), dataOut); }

static inline int32_t StateEstimationSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(StateEstimationHandle(), dataIn); }

static inline int8_t StateEstimationReadOnly() { return UAVObjReadOnly(StateEstimationHandle()); }

static inline uint16_t StateEstimationGetNumInstances(){ return UAVObjGetNumInstances(StateEstimationHandle()); }

static inline uint32_t StateEstimationGetNumBytes(){ return UAVObjGetNumBytes(StateEstimationHandle()); }

// Field information
// Field AttitudeFilter information
/* Enumeration options for field AttitudeFilter */
typedef enum { STATEESTIMATION_ATTITUDEFILTER_COMPLEMENTARY=0, STATEESTIMATION_ATTITUDEFILTER_INSINDOOR=1, STATEESTIMATION_ATTITUDEFILTER_INSOUTDOOR=2 }  __attribute__((packed)) StateEstimationAttitudeFilterOptions;
// Field NavigationFilter information
/* Enumeration options for field NavigationFilter */
typedef enum { STATEESTIMATION_NAVIGATIONFILTER_NONE=0, STATEESTIMATION_NAVIGATIONFILTER_RAW=1, STATEESTIMATION_NAVIGATIONFILTER_INS=2 }  __attribute__((packed)) StateEstimationNavigationFilterOptions;


// set/Get functions
extern void StateEstimationAttitudeFilterSet( uint8_t *NewAttitudeFilter );
extern void StateEstimationAttitudeFilterGet( uint8_t *NewAttitudeFilter );
extern void StateEstimationNavigationFilterSet( uint8_t *NewNavigationFilter );
extern void StateEstimationNavigationFilterGet( uint8_t *NewNavigationFilter );


#endif // STATEESTIMATION_H

/**
 * @}
 * @}
 */
