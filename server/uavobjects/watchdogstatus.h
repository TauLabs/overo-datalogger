/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup WatchdogStatus WatchdogStatus
 * @brief For monitoring the flags in the watchdog and especially the bootup flags
 *
 *
 * @file       watchdogstatus.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015
 * @brief      Include files for the WatchdogStatus object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: watchdogstatus.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef WATCHDOGSTATUS_H
#define WATCHDOGSTATUS_H

#include "pios_queue.h"
#include "uavoversion.h"



// Object constants
#define WATCHDOGSTATUS_OBJID 0xA207FA7C
#define WATCHDOGSTATUS_ISSINGLEINST 1
#define WATCHDOGSTATUS_ISSETTINGS 0
#define WATCHDOGSTATUS_NUMBYTES 4

// Generic interface functions
int32_t WatchdogStatusInitialize();
UAVObjHandle WatchdogStatusHandle();
void WatchdogStatusSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    uint16_t BootupFlags;
    uint16_t ActiveFlags;

} __attribute__((packed)) __attribute__((aligned(4))) WatchdogStatusData;

// Typesafe Object access functions
/**
 * @function WatchdogStatusGet(dataOut)
 * @brief Populate a WatchdogStatusData object
 * @param[out] dataOut 
 */
static inline int32_t WatchdogStatusGet(WatchdogStatusData *dataOut) { return UAVObjGetData(WatchdogStatusHandle(), dataOut); }

static inline int32_t WatchdogStatusSet(const WatchdogStatusData *dataIn) { return UAVObjSetData(WatchdogStatusHandle(), dataIn); }

static inline int32_t WatchdogStatusInstGet(uint16_t instId, WatchdogStatusData *dataOut) { return UAVObjGetInstanceData(WatchdogStatusHandle(), instId, dataOut); }

static inline int32_t WatchdogStatusInstSet(uint16_t instId, const WatchdogStatusData *dataIn) { return UAVObjSetInstanceData(WatchdogStatusHandle(), instId, dataIn); }

static inline int32_t WatchdogStatusConnectQueue(struct pios_queue *queue) { return UAVObjConnectQueue(WatchdogStatusHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t WatchdogStatusConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(WatchdogStatusHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t WatchdogStatusCreateInstance() { return UAVObjCreateInstance(WatchdogStatusHandle(), &WatchdogStatusSetDefaults); }

static inline void WatchdogStatusRequestUpdate() { UAVObjRequestUpdate(WatchdogStatusHandle()); }

static inline void WatchdogStatusRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(WatchdogStatusHandle(), instId); }

static inline void WatchdogStatusUpdated() { UAVObjUpdated(WatchdogStatusHandle()); }

static inline void WatchdogStatusInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(WatchdogStatusHandle(), instId); }

static inline int32_t WatchdogStatusGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(WatchdogStatusHandle(), dataOut); }

static inline int32_t WatchdogStatusSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(WatchdogStatusHandle(), dataIn); }

static inline int8_t WatchdogStatusReadOnly() { return UAVObjReadOnly(WatchdogStatusHandle()); }

static inline uint16_t WatchdogStatusGetNumInstances(){ return UAVObjGetNumInstances(WatchdogStatusHandle()); }

static inline uint32_t WatchdogStatusGetNumBytes(){ return UAVObjGetNumBytes(WatchdogStatusHandle()); }

// Field information
// Field BootupFlags information
// Field ActiveFlags information


// set/Get functions
extern void WatchdogStatusBootupFlagsSet( uint16_t *NewBootupFlags );
extern void WatchdogStatusBootupFlagsGet( uint16_t *NewBootupFlags );
extern void WatchdogStatusActiveFlagsSet( uint16_t *NewActiveFlags );
extern void WatchdogStatusActiveFlagsGet( uint16_t *NewActiveFlags );


#endif // WATCHDOGSTATUS_H

/**
 * @}
 * @}
 */
