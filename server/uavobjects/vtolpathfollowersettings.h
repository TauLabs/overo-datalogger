/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup VtolPathFollowerSettings VtolPathFollowerSettings
 * @brief Settings for the @ref VtolPathFollowerModule
 *
 *
 * @file       vtolpathfollowersettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015
 * @brief      Include files for the VtolPathFollowerSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: vtolpathfollowersettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef VTOLPATHFOLLOWERSETTINGS_H
#define VTOLPATHFOLLOWERSETTINGS_H

#include "pios_queue.h"
#include "uavoversion.h"



// Object constants
#define VTOLPATHFOLLOWERSETTINGS_OBJID 0x368CC898
#define VTOLPATHFOLLOWERSETTINGS_ISSINGLEINST 1
#define VTOLPATHFOLLOWERSETTINGS_ISSETTINGS 1
#define VTOLPATHFOLLOWERSETTINGS_NUMBYTES 104

// Generic interface functions
int32_t VtolPathFollowerSettingsInitialize();
UAVObjHandle VtolPathFollowerSettingsHandle();
void VtolPathFollowerSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float HorizontalPosPI[3];
    float HorizontalVelPID[4];
    float VelocityFeedforward;
    float PositionFeedforward;
    float EndpointDeadbandWidth;
    float EndpointDeadbandCenterGain;
    float PathDeadbandWidth;
    float PathDeadbandCenterGain;
    float MaxRollPitch;
    float EndpointRadius;
    float WaypointAltitudeTol;
    int32_t UpdatePeriod;
    float LandingRate;
    float LoiterBrakingTimeConstant;
    float LoiterErrorDecayConstant;
    float LoiterLookaheadTimeConstant;
    float LoiterInitialMaxVel;
    float LoiterAttitudeFeedthrough;
    float ReturnToHomeVel;
    uint16_t HorizontalVelMax;
    uint16_t VerticalVelMax;
    uint8_t ThrottleControl;
    uint8_t VelocityChangePrediction;
    uint8_t YawMode;
    uint8_t LoiterAllowAltControl;

} __attribute__((packed)) __attribute__((aligned(4))) VtolPathFollowerSettingsData;

// Typesafe Object access functions
/**
 * @function VtolPathFollowerSettingsGet(dataOut)
 * @brief Populate a VtolPathFollowerSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t VtolPathFollowerSettingsGet(VtolPathFollowerSettingsData *dataOut) { return UAVObjGetData(VtolPathFollowerSettingsHandle(), dataOut); }

static inline int32_t VtolPathFollowerSettingsSet(const VtolPathFollowerSettingsData *dataIn) { return UAVObjSetData(VtolPathFollowerSettingsHandle(), dataIn); }

static inline int32_t VtolPathFollowerSettingsInstGet(uint16_t instId, VtolPathFollowerSettingsData *dataOut) { return UAVObjGetInstanceData(VtolPathFollowerSettingsHandle(), instId, dataOut); }

static inline int32_t VtolPathFollowerSettingsInstSet(uint16_t instId, const VtolPathFollowerSettingsData *dataIn) { return UAVObjSetInstanceData(VtolPathFollowerSettingsHandle(), instId, dataIn); }

static inline int32_t VtolPathFollowerSettingsConnectQueue(struct pios_queue *queue) { return UAVObjConnectQueue(VtolPathFollowerSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t VtolPathFollowerSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(VtolPathFollowerSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t VtolPathFollowerSettingsCreateInstance() { return UAVObjCreateInstance(VtolPathFollowerSettingsHandle(), &VtolPathFollowerSettingsSetDefaults); }

static inline void VtolPathFollowerSettingsRequestUpdate() { UAVObjRequestUpdate(VtolPathFollowerSettingsHandle()); }

static inline void VtolPathFollowerSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(VtolPathFollowerSettingsHandle(), instId); }

static inline void VtolPathFollowerSettingsUpdated() { UAVObjUpdated(VtolPathFollowerSettingsHandle()); }

static inline void VtolPathFollowerSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(VtolPathFollowerSettingsHandle(), instId); }

static inline int32_t VtolPathFollowerSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(VtolPathFollowerSettingsHandle(), dataOut); }

static inline int32_t VtolPathFollowerSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(VtolPathFollowerSettingsHandle(), dataIn); }

static inline int8_t VtolPathFollowerSettingsReadOnly() { return UAVObjReadOnly(VtolPathFollowerSettingsHandle()); }

static inline uint16_t VtolPathFollowerSettingsGetNumInstances(){ return UAVObjGetNumInstances(VtolPathFollowerSettingsHandle()); }

static inline uint32_t VtolPathFollowerSettingsGetNumBytes(){ return UAVObjGetNumBytes(VtolPathFollowerSettingsHandle()); }

// Field information
// Field HorizontalPosPI information
/* Array element names for field HorizontalPosPI */
typedef enum { VTOLPATHFOLLOWERSETTINGS_HORIZONTALPOSPI_KP=0, VTOLPATHFOLLOWERSETTINGS_HORIZONTALPOSPI_KI=1, VTOLPATHFOLLOWERSETTINGS_HORIZONTALPOSPI_ILIMIT=2 } __attribute__((packed)) VtolPathFollowerSettingsHorizontalPosPIElem;
/* Number of elements for field HorizontalPosPI */
#define VTOLPATHFOLLOWERSETTINGS_HORIZONTALPOSPI_NUMELEM 3
// Field HorizontalVelPID information
/* Array element names for field HorizontalVelPID */
typedef enum { VTOLPATHFOLLOWERSETTINGS_HORIZONTALVELPID_KP=0, VTOLPATHFOLLOWERSETTINGS_HORIZONTALVELPID_KI=1, VTOLPATHFOLLOWERSETTINGS_HORIZONTALVELPID_KD=2, VTOLPATHFOLLOWERSETTINGS_HORIZONTALVELPID_ILIMIT=3 } __attribute__((packed)) VtolPathFollowerSettingsHorizontalVelPIDElem;
/* Number of elements for field HorizontalVelPID */
#define VTOLPATHFOLLOWERSETTINGS_HORIZONTALVELPID_NUMELEM 4
// Field VelocityFeedforward information
// Field PositionFeedforward information
// Field EndpointDeadbandWidth information
// Field EndpointDeadbandCenterGain information
// Field PathDeadbandWidth information
// Field PathDeadbandCenterGain information
// Field MaxRollPitch information
// Field EndpointRadius information
// Field WaypointAltitudeTol information
// Field UpdatePeriod information
// Field LandingRate information
// Field LoiterBrakingTimeConstant information
// Field LoiterErrorDecayConstant information
// Field LoiterLookaheadTimeConstant information
// Field LoiterInitialMaxVel information
// Field LoiterAttitudeFeedthrough information
// Field ReturnToHomeVel information
// Field HorizontalVelMax information
// Field VerticalVelMax information
// Field ThrottleControl information
/* Enumeration options for field ThrottleControl */
typedef enum { VTOLPATHFOLLOWERSETTINGS_THROTTLECONTROL_FALSE=0, VTOLPATHFOLLOWERSETTINGS_THROTTLECONTROL_TRUE=1 }  __attribute__((packed)) VtolPathFollowerSettingsThrottleControlOptions;
/* Max value of any option in topmost parent ThrottleControl of field ThrottleControl */
#define VTOLPATHFOLLOWERSETTINGS_THROTTLECONTROL_GLOBAL_MAXOPTVAL 1
/* Max value of any option in field ThrottleControl */
#define VTOLPATHFOLLOWERSETTINGS_THROTTLECONTROL_MAXOPTVAL 1
/* Ensure field ThrottleControl contains valid data */
static inline bool VtolPathFollowerSettingsThrottleControlIsValid( uint8_t CurrentThrottleControl ) { return CurrentThrottleControl < VTOLPATHFOLLOWERSETTINGS_THROTTLECONTROL_MAXOPTVAL; }
// Field VelocityChangePrediction information
/* Enumeration options for field VelocityChangePrediction */
typedef enum { VTOLPATHFOLLOWERSETTINGS_VELOCITYCHANGEPREDICTION_FALSE=0, VTOLPATHFOLLOWERSETTINGS_VELOCITYCHANGEPREDICTION_TRUE=1 }  __attribute__((packed)) VtolPathFollowerSettingsVelocityChangePredictionOptions;
/* Max value of any option in topmost parent VelocityChangePrediction of field VelocityChangePrediction */
#define VTOLPATHFOLLOWERSETTINGS_VELOCITYCHANGEPREDICTION_GLOBAL_MAXOPTVAL 1
/* Max value of any option in field VelocityChangePrediction */
#define VTOLPATHFOLLOWERSETTINGS_VELOCITYCHANGEPREDICTION_MAXOPTVAL 1
/* Ensure field VelocityChangePrediction contains valid data */
static inline bool VtolPathFollowerSettingsVelocityChangePredictionIsValid( uint8_t CurrentVelocityChangePrediction ) { return CurrentVelocityChangePrediction < VTOLPATHFOLLOWERSETTINGS_VELOCITYCHANGEPREDICTION_MAXOPTVAL; }
// Field YawMode information
/* Enumeration options for field YawMode */
typedef enum { VTOLPATHFOLLOWERSETTINGS_YAWMODE_RATE=0, VTOLPATHFOLLOWERSETTINGS_YAWMODE_AXISLOCK=1, VTOLPATHFOLLOWERSETTINGS_YAWMODE_ATTITUDE=2, VTOLPATHFOLLOWERSETTINGS_YAWMODE_PATH=3, VTOLPATHFOLLOWERSETTINGS_YAWMODE_POI=4 }  __attribute__((packed)) VtolPathFollowerSettingsYawModeOptions;
/* Max value of any option in topmost parent YawMode of field YawMode */
#define VTOLPATHFOLLOWERSETTINGS_YAWMODE_GLOBAL_MAXOPTVAL 4
/* Max value of any option in field YawMode */
#define VTOLPATHFOLLOWERSETTINGS_YAWMODE_MAXOPTVAL 4
/* Ensure field YawMode contains valid data */
static inline bool VtolPathFollowerSettingsYawModeIsValid( uint8_t CurrentYawMode ) { return CurrentYawMode < VTOLPATHFOLLOWERSETTINGS_YAWMODE_MAXOPTVAL; }
// Field LoiterAllowAltControl information
/* Enumeration options for field LoiterAllowAltControl */
typedef enum { VTOLPATHFOLLOWERSETTINGS_LOITERALLOWALTCONTROL_FALSE=0, VTOLPATHFOLLOWERSETTINGS_LOITERALLOWALTCONTROL_TRUE=1 }  __attribute__((packed)) VtolPathFollowerSettingsLoiterAllowAltControlOptions;
/* Max value of any option in topmost parent LoiterAllowAltControl of field LoiterAllowAltControl */
#define VTOLPATHFOLLOWERSETTINGS_LOITERALLOWALTCONTROL_GLOBAL_MAXOPTVAL 1
/* Max value of any option in field LoiterAllowAltControl */
#define VTOLPATHFOLLOWERSETTINGS_LOITERALLOWALTCONTROL_MAXOPTVAL 1
/* Ensure field LoiterAllowAltControl contains valid data */
static inline bool VtolPathFollowerSettingsLoiterAllowAltControlIsValid( uint8_t CurrentLoiterAllowAltControl ) { return CurrentLoiterAllowAltControl < VTOLPATHFOLLOWERSETTINGS_LOITERALLOWALTCONTROL_MAXOPTVAL; }


// set/Get functions
extern void VtolPathFollowerSettingsHorizontalPosPISet( float *NewHorizontalPosPI );
extern void VtolPathFollowerSettingsHorizontalPosPIGet( float *NewHorizontalPosPI );
extern void VtolPathFollowerSettingsHorizontalVelPIDSet( float *NewHorizontalVelPID );
extern void VtolPathFollowerSettingsHorizontalVelPIDGet( float *NewHorizontalVelPID );
extern void VtolPathFollowerSettingsVelocityFeedforwardSet( float *NewVelocityFeedforward );
extern void VtolPathFollowerSettingsVelocityFeedforwardGet( float *NewVelocityFeedforward );
extern void VtolPathFollowerSettingsPositionFeedforwardSet( float *NewPositionFeedforward );
extern void VtolPathFollowerSettingsPositionFeedforwardGet( float *NewPositionFeedforward );
extern void VtolPathFollowerSettingsEndpointDeadbandWidthSet( float *NewEndpointDeadbandWidth );
extern void VtolPathFollowerSettingsEndpointDeadbandWidthGet( float *NewEndpointDeadbandWidth );
extern void VtolPathFollowerSettingsEndpointDeadbandCenterGainSet( float *NewEndpointDeadbandCenterGain );
extern void VtolPathFollowerSettingsEndpointDeadbandCenterGainGet( float *NewEndpointDeadbandCenterGain );
extern void VtolPathFollowerSettingsPathDeadbandWidthSet( float *NewPathDeadbandWidth );
extern void VtolPathFollowerSettingsPathDeadbandWidthGet( float *NewPathDeadbandWidth );
extern void VtolPathFollowerSettingsPathDeadbandCenterGainSet( float *NewPathDeadbandCenterGain );
extern void VtolPathFollowerSettingsPathDeadbandCenterGainGet( float *NewPathDeadbandCenterGain );
extern void VtolPathFollowerSettingsMaxRollPitchSet( float *NewMaxRollPitch );
extern void VtolPathFollowerSettingsMaxRollPitchGet( float *NewMaxRollPitch );
extern void VtolPathFollowerSettingsEndpointRadiusSet( float *NewEndpointRadius );
extern void VtolPathFollowerSettingsEndpointRadiusGet( float *NewEndpointRadius );
extern void VtolPathFollowerSettingsWaypointAltitudeTolSet( float *NewWaypointAltitudeTol );
extern void VtolPathFollowerSettingsWaypointAltitudeTolGet( float *NewWaypointAltitudeTol );
extern void VtolPathFollowerSettingsUpdatePeriodSet( int32_t *NewUpdatePeriod );
extern void VtolPathFollowerSettingsUpdatePeriodGet( int32_t *NewUpdatePeriod );
extern void VtolPathFollowerSettingsLandingRateSet( float *NewLandingRate );
extern void VtolPathFollowerSettingsLandingRateGet( float *NewLandingRate );
extern void VtolPathFollowerSettingsLoiterBrakingTimeConstantSet( float *NewLoiterBrakingTimeConstant );
extern void VtolPathFollowerSettingsLoiterBrakingTimeConstantGet( float *NewLoiterBrakingTimeConstant );
extern void VtolPathFollowerSettingsLoiterErrorDecayConstantSet( float *NewLoiterErrorDecayConstant );
extern void VtolPathFollowerSettingsLoiterErrorDecayConstantGet( float *NewLoiterErrorDecayConstant );
extern void VtolPathFollowerSettingsLoiterLookaheadTimeConstantSet( float *NewLoiterLookaheadTimeConstant );
extern void VtolPathFollowerSettingsLoiterLookaheadTimeConstantGet( float *NewLoiterLookaheadTimeConstant );
extern void VtolPathFollowerSettingsLoiterInitialMaxVelSet( float *NewLoiterInitialMaxVel );
extern void VtolPathFollowerSettingsLoiterInitialMaxVelGet( float *NewLoiterInitialMaxVel );
extern void VtolPathFollowerSettingsLoiterAttitudeFeedthroughSet( float *NewLoiterAttitudeFeedthrough );
extern void VtolPathFollowerSettingsLoiterAttitudeFeedthroughGet( float *NewLoiterAttitudeFeedthrough );
extern void VtolPathFollowerSettingsReturnToHomeVelSet( float *NewReturnToHomeVel );
extern void VtolPathFollowerSettingsReturnToHomeVelGet( float *NewReturnToHomeVel );
extern void VtolPathFollowerSettingsHorizontalVelMaxSet( uint16_t *NewHorizontalVelMax );
extern void VtolPathFollowerSettingsHorizontalVelMaxGet( uint16_t *NewHorizontalVelMax );
extern void VtolPathFollowerSettingsVerticalVelMaxSet( uint16_t *NewVerticalVelMax );
extern void VtolPathFollowerSettingsVerticalVelMaxGet( uint16_t *NewVerticalVelMax );
extern void VtolPathFollowerSettingsThrottleControlSet( uint8_t *NewThrottleControl );
extern void VtolPathFollowerSettingsThrottleControlGet( uint8_t *NewThrottleControl );
extern void VtolPathFollowerSettingsVelocityChangePredictionSet( uint8_t *NewVelocityChangePrediction );
extern void VtolPathFollowerSettingsVelocityChangePredictionGet( uint8_t *NewVelocityChangePrediction );
extern void VtolPathFollowerSettingsYawModeSet( uint8_t *NewYawMode );
extern void VtolPathFollowerSettingsYawModeGet( uint8_t *NewYawMode );
extern void VtolPathFollowerSettingsLoiterAllowAltControlSet( uint8_t *NewLoiterAllowAltControl );
extern void VtolPathFollowerSettingsLoiterAllowAltControlGet( uint8_t *NewLoiterAllowAltControl );


#endif // VTOLPATHFOLLOWERSETTINGS_H

/**
 * @}
 * @}
 */
