/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup SystemAlarms SystemAlarms
 * @brief Alarms from OpenPilot to indicate failure conditions or warnings.  Set by various modules.
 *
 *
 * @file       systemalarms.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015
 * @brief      Include files for the SystemAlarms object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: systemalarms.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef SYSTEMALARMS_H
#define SYSTEMALARMS_H

#include "pios_queue.h"
#include "uavoversion.h"



// Object constants
#define SYSTEMALARMS_OBJID 0x5BD66DCC
#define SYSTEMALARMS_ISSINGLEINST 1
#define SYSTEMALARMS_ISSETTINGS 0
#define SYSTEMALARMS_NUMBYTES 27

// Generic interface functions
int32_t SystemAlarmsInitialize();
UAVObjHandle SystemAlarmsHandle();
void SystemAlarmsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    uint8_t Alarm[23];
    uint8_t ConfigError;
    uint8_t ManualControl;
    uint8_t StateEstimation;
    uint8_t RebootCause;

} __attribute__((packed)) __attribute__((aligned(4))) SystemAlarmsData;

// Typesafe Object access functions
/**
 * @function SystemAlarmsGet(dataOut)
 * @brief Populate a SystemAlarmsData object
 * @param[out] dataOut 
 */
static inline int32_t SystemAlarmsGet(SystemAlarmsData *dataOut) { return UAVObjGetData(SystemAlarmsHandle(), dataOut); }

static inline int32_t SystemAlarmsSet(const SystemAlarmsData *dataIn) { return UAVObjSetData(SystemAlarmsHandle(), dataIn); }

static inline int32_t SystemAlarmsInstGet(uint16_t instId, SystemAlarmsData *dataOut) { return UAVObjGetInstanceData(SystemAlarmsHandle(), instId, dataOut); }

static inline int32_t SystemAlarmsInstSet(uint16_t instId, const SystemAlarmsData *dataIn) { return UAVObjSetInstanceData(SystemAlarmsHandle(), instId, dataIn); }

static inline int32_t SystemAlarmsConnectQueue(struct pios_queue *queue) { return UAVObjConnectQueue(SystemAlarmsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t SystemAlarmsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(SystemAlarmsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t SystemAlarmsCreateInstance() { return UAVObjCreateInstance(SystemAlarmsHandle(), &SystemAlarmsSetDefaults); }

static inline void SystemAlarmsRequestUpdate() { UAVObjRequestUpdate(SystemAlarmsHandle()); }

static inline void SystemAlarmsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(SystemAlarmsHandle(), instId); }

static inline void SystemAlarmsUpdated() { UAVObjUpdated(SystemAlarmsHandle()); }

static inline void SystemAlarmsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(SystemAlarmsHandle(), instId); }

static inline int32_t SystemAlarmsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(SystemAlarmsHandle(), dataOut); }

static inline int32_t SystemAlarmsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(SystemAlarmsHandle(), dataIn); }

static inline int8_t SystemAlarmsReadOnly() { return UAVObjReadOnly(SystemAlarmsHandle()); }

static inline uint16_t SystemAlarmsGetNumInstances(){ return UAVObjGetNumInstances(SystemAlarmsHandle()); }

static inline uint32_t SystemAlarmsGetNumBytes(){ return UAVObjGetNumBytes(SystemAlarmsHandle()); }

// Field information
// Field Alarm information
/* Enumeration options for field Alarm */
typedef enum { SYSTEMALARMS_ALARM_UNINITIALISED=0, SYSTEMALARMS_ALARM_OK=1, SYSTEMALARMS_ALARM_WARNING=2, SYSTEMALARMS_ALARM_ERROR=3, SYSTEMALARMS_ALARM_CRITICAL=4 }  __attribute__((packed)) SystemAlarmsAlarmOptions;
/* Max value of any option in topmost parent Alarm of field Alarm */
#define SYSTEMALARMS_ALARM_GLOBAL_MAXOPTVAL 4
/* Max value of any option in field Alarm */
#define SYSTEMALARMS_ALARM_MAXOPTVAL 4
/* Ensure field Alarm contains valid data */
static inline bool SystemAlarmsAlarmIsValid( uint8_t CurrentAlarm ) { return CurrentAlarm < SYSTEMALARMS_ALARM_MAXOPTVAL; }
/* Array element names for field Alarm */
typedef enum { SYSTEMALARMS_ALARM_OUTOFMEMORY=0, SYSTEMALARMS_ALARM_CPUOVERLOAD=1, SYSTEMALARMS_ALARM_STACKOVERFLOW=2, SYSTEMALARMS_ALARM_SYSTEMCONFIGURATION=3, SYSTEMALARMS_ALARM_EVENTSYSTEM=4, SYSTEMALARMS_ALARM_TELEMETRY=5, SYSTEMALARMS_ALARM_MANUALCONTROL=6, SYSTEMALARMS_ALARM_ACTUATOR=7, SYSTEMALARMS_ALARM_ATTITUDE=8, SYSTEMALARMS_ALARM_SENSORS=9, SYSTEMALARMS_ALARM_STABILIZATION=10, SYSTEMALARMS_ALARM_GEOFENCE=11, SYSTEMALARMS_ALARM_PATHFOLLOWER=12, SYSTEMALARMS_ALARM_PATHPLANNER=13, SYSTEMALARMS_ALARM_BATTERY=14, SYSTEMALARMS_ALARM_FLIGHTTIME=15, SYSTEMALARMS_ALARM_I2C=16, SYSTEMALARMS_ALARM_GPS=17, SYSTEMALARMS_ALARM_ALTITUDEHOLD=18, SYSTEMALARMS_ALARM_BOOTFAULT=19, SYSTEMALARMS_ALARM_TEMPBARO=20, SYSTEMALARMS_ALARM_GYROBIAS=21, SYSTEMALARMS_ALARM_ADC=22 } __attribute__((packed)) SystemAlarmsAlarmElem;
/* Number of elements for field Alarm */
#define SYSTEMALARMS_ALARM_NUMELEM 23
// Field ConfigError information
/* Enumeration options for field ConfigError */
typedef enum { SYSTEMALARMS_CONFIGERROR_STABILIZATION=0, SYSTEMALARMS_CONFIGERROR_MULTIROTOR=1, SYSTEMALARMS_CONFIGERROR_AUTOTUNE=2, SYSTEMALARMS_CONFIGERROR_ALTITUDEHOLD=3, SYSTEMALARMS_CONFIGERROR_POSITIONHOLD=4, SYSTEMALARMS_CONFIGERROR_PATHPLANNER=5, SYSTEMALARMS_CONFIGERROR_DUPLICATEPORTCFG=6, SYSTEMALARMS_CONFIGERROR_NAVFILTER=7, SYSTEMALARMS_CONFIGERROR_UNSAFETOARM=8, SYSTEMALARMS_CONFIGERROR_UNDEFINED=9, SYSTEMALARMS_CONFIGERROR_NONE=10 }  __attribute__((packed)) SystemAlarmsConfigErrorOptions;
/* Max value of any option in topmost parent ConfigError of field ConfigError */
#define SYSTEMALARMS_CONFIGERROR_GLOBAL_MAXOPTVAL 10
/* Max value of any option in field ConfigError */
#define SYSTEMALARMS_CONFIGERROR_MAXOPTVAL 10
/* Ensure field ConfigError contains valid data */
static inline bool SystemAlarmsConfigErrorIsValid( uint8_t CurrentConfigError ) { return CurrentConfigError < SYSTEMALARMS_CONFIGERROR_MAXOPTVAL; }
// Field ManualControl information
/* Enumeration options for field ManualControl */
typedef enum { SYSTEMALARMS_MANUALCONTROL_SETTINGS=0, SYSTEMALARMS_MANUALCONTROL_NORX=1, SYSTEMALARMS_MANUALCONTROL_ACCESSORY=2, SYSTEMALARMS_MANUALCONTROL_ALTITUDEHOLD=3, SYSTEMALARMS_MANUALCONTROL_PATHFOLLOWER=4, SYSTEMALARMS_MANUALCONTROL_UNDEFINED=5, SYSTEMALARMS_MANUALCONTROL_NONE=6 }  __attribute__((packed)) SystemAlarmsManualControlOptions;
/* Max value of any option in topmost parent ManualControl of field ManualControl */
#define SYSTEMALARMS_MANUALCONTROL_GLOBAL_MAXOPTVAL 6
/* Max value of any option in field ManualControl */
#define SYSTEMALARMS_MANUALCONTROL_MAXOPTVAL 6
/* Ensure field ManualControl contains valid data */
static inline bool SystemAlarmsManualControlIsValid( uint8_t CurrentManualControl ) { return CurrentManualControl < SYSTEMALARMS_MANUALCONTROL_MAXOPTVAL; }
// Field StateEstimation information
/* Enumeration options for field StateEstimation */
typedef enum { SYSTEMALARMS_STATEESTIMATION_GYROQUEUENOTUPDATING=0, SYSTEMALARMS_STATEESTIMATION_ACCELEROMETERQUEUENOTUPDATING=1, SYSTEMALARMS_STATEESTIMATION_NOGPS=2, SYSTEMALARMS_STATEESTIMATION_NOMAGNETOMETER=3, SYSTEMALARMS_STATEESTIMATION_NOBAROMETER=4, SYSTEMALARMS_STATEESTIMATION_NOHOME=5, SYSTEMALARMS_STATEESTIMATION_TOOFEWSATELLITES=6, SYSTEMALARMS_STATEESTIMATION_PDOPTOOHIGH=7, SYSTEMALARMS_STATEESTIMATION_UNDEFINED=8, SYSTEMALARMS_STATEESTIMATION_NONE=9 }  __attribute__((packed)) SystemAlarmsStateEstimationOptions;
/* Max value of any option in topmost parent StateEstimation of field StateEstimation */
#define SYSTEMALARMS_STATEESTIMATION_GLOBAL_MAXOPTVAL 9
/* Max value of any option in field StateEstimation */
#define SYSTEMALARMS_STATEESTIMATION_MAXOPTVAL 9
/* Ensure field StateEstimation contains valid data */
static inline bool SystemAlarmsStateEstimationIsValid( uint8_t CurrentStateEstimation ) { return CurrentStateEstimation < SYSTEMALARMS_STATEESTIMATION_MAXOPTVAL; }
// Field RebootCause information
/* Enumeration options for field RebootCause */
typedef enum { SYSTEMALARMS_REBOOTCAUSE_BROWNOUT=0, SYSTEMALARMS_REBOOTCAUSE_PINRESET=1, SYSTEMALARMS_REBOOTCAUSE_POWERONRESET=2, SYSTEMALARMS_REBOOTCAUSE_SOFTWARERESET=3, SYSTEMALARMS_REBOOTCAUSE_INDEPENDENTWATCHDOG=4, SYSTEMALARMS_REBOOTCAUSE_WINDOWWATCHDOG=5, SYSTEMALARMS_REBOOTCAUSE_LOWPOWER=6, SYSTEMALARMS_REBOOTCAUSE_UNDEFINED=7 }  __attribute__((packed)) SystemAlarmsRebootCauseOptions;
/* Max value of any option in topmost parent RebootCause of field RebootCause */
#define SYSTEMALARMS_REBOOTCAUSE_GLOBAL_MAXOPTVAL 7
/* Max value of any option in field RebootCause */
#define SYSTEMALARMS_REBOOTCAUSE_MAXOPTVAL 7
/* Ensure field RebootCause contains valid data */
static inline bool SystemAlarmsRebootCauseIsValid( uint8_t CurrentRebootCause ) { return CurrentRebootCause < SYSTEMALARMS_REBOOTCAUSE_MAXOPTVAL; }


// set/Get functions
extern void SystemAlarmsAlarmSet( uint8_t *NewAlarm );
extern void SystemAlarmsAlarmGet( uint8_t *NewAlarm );
extern void SystemAlarmsConfigErrorSet( uint8_t *NewConfigError );
extern void SystemAlarmsConfigErrorGet( uint8_t *NewConfigError );
extern void SystemAlarmsManualControlSet( uint8_t *NewManualControl );
extern void SystemAlarmsManualControlGet( uint8_t *NewManualControl );
extern void SystemAlarmsStateEstimationSet( uint8_t *NewStateEstimation );
extern void SystemAlarmsStateEstimationGet( uint8_t *NewStateEstimation );
extern void SystemAlarmsRebootCauseSet( uint8_t *NewRebootCause );
extern void SystemAlarmsRebootCauseGet( uint8_t *NewRebootCause );


#endif // SYSTEMALARMS_H

/**
 * @}
 * @}
 */
