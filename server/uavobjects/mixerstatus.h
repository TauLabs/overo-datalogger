/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup MixerStatus MixerStatus
 * @brief Status for the matrix mixer showing the output of each mixer after all scaling
 *
 *
 * @file       mixerstatus.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015
 * @brief      Include files for the MixerStatus object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: mixerstatus.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef MIXERSTATUS_H
#define MIXERSTATUS_H

#include "pios_queue.h"
#include "uavoversion.h"



// Object constants
#define MIXERSTATUS_OBJID 0x124E28A
#define MIXERSTATUS_ISSINGLEINST 1
#define MIXERSTATUS_ISSETTINGS 0
#define MIXERSTATUS_NUMBYTES 40

// Generic interface functions
int32_t MixerStatusInitialize();
UAVObjHandle MixerStatusHandle();
void MixerStatusSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float Mixer1;
    float Mixer2;
    float Mixer3;
    float Mixer4;
    float Mixer5;
    float Mixer6;
    float Mixer7;
    float Mixer8;
    float Mixer9;
    float Mixer10;

} __attribute__((packed)) __attribute__((aligned(4))) MixerStatusData;

// Typesafe Object access functions
/**
 * @function MixerStatusGet(dataOut)
 * @brief Populate a MixerStatusData object
 * @param[out] dataOut 
 */
static inline int32_t MixerStatusGet(MixerStatusData *dataOut) { return UAVObjGetData(MixerStatusHandle(), dataOut); }

static inline int32_t MixerStatusSet(const MixerStatusData *dataIn) { return UAVObjSetData(MixerStatusHandle(), dataIn); }

static inline int32_t MixerStatusInstGet(uint16_t instId, MixerStatusData *dataOut) { return UAVObjGetInstanceData(MixerStatusHandle(), instId, dataOut); }

static inline int32_t MixerStatusInstSet(uint16_t instId, const MixerStatusData *dataIn) { return UAVObjSetInstanceData(MixerStatusHandle(), instId, dataIn); }

static inline int32_t MixerStatusConnectQueue(struct pios_queue *queue) { return UAVObjConnectQueue(MixerStatusHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t MixerStatusConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(MixerStatusHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t MixerStatusCreateInstance() { return UAVObjCreateInstance(MixerStatusHandle(), &MixerStatusSetDefaults); }

static inline void MixerStatusRequestUpdate() { UAVObjRequestUpdate(MixerStatusHandle()); }

static inline void MixerStatusRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(MixerStatusHandle(), instId); }

static inline void MixerStatusUpdated() { UAVObjUpdated(MixerStatusHandle()); }

static inline void MixerStatusInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(MixerStatusHandle(), instId); }

static inline int32_t MixerStatusGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(MixerStatusHandle(), dataOut); }

static inline int32_t MixerStatusSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(MixerStatusHandle(), dataIn); }

static inline int8_t MixerStatusReadOnly() { return UAVObjReadOnly(MixerStatusHandle()); }

static inline uint16_t MixerStatusGetNumInstances(){ return UAVObjGetNumInstances(MixerStatusHandle()); }

static inline uint32_t MixerStatusGetNumBytes(){ return UAVObjGetNumBytes(MixerStatusHandle()); }

// Field information
// Field Mixer1 information
// Field Mixer2 information
// Field Mixer3 information
// Field Mixer4 information
// Field Mixer5 information
// Field Mixer6 information
// Field Mixer7 information
// Field Mixer8 information
// Field Mixer9 information
// Field Mixer10 information


// set/Get functions
extern void MixerStatusMixer1Set( float *NewMixer1 );
extern void MixerStatusMixer1Get( float *NewMixer1 );
extern void MixerStatusMixer2Set( float *NewMixer2 );
extern void MixerStatusMixer2Get( float *NewMixer2 );
extern void MixerStatusMixer3Set( float *NewMixer3 );
extern void MixerStatusMixer3Get( float *NewMixer3 );
extern void MixerStatusMixer4Set( float *NewMixer4 );
extern void MixerStatusMixer4Get( float *NewMixer4 );
extern void MixerStatusMixer5Set( float *NewMixer5 );
extern void MixerStatusMixer5Get( float *NewMixer5 );
extern void MixerStatusMixer6Set( float *NewMixer6 );
extern void MixerStatusMixer6Get( float *NewMixer6 );
extern void MixerStatusMixer7Set( float *NewMixer7 );
extern void MixerStatusMixer7Get( float *NewMixer7 );
extern void MixerStatusMixer8Set( float *NewMixer8 );
extern void MixerStatusMixer8Get( float *NewMixer8 );
extern void MixerStatusMixer9Set( float *NewMixer9 );
extern void MixerStatusMixer9Get( float *NewMixer9 );
extern void MixerStatusMixer10Set( float *NewMixer10 );
extern void MixerStatusMixer10Get( float *NewMixer10 );


#endif // MIXERSTATUS_H

/**
 * @}
 * @}
 */
