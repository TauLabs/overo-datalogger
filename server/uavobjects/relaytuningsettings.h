/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup RelayTuningSettings RelayTuningSettings
 * @brief Setting to run a relay tuning algorithm
 *
 *
 * @file       relaytuningsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013
 * @brief      Include files for the RelayTuningSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: relaytuningsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef RELAYTUNINGSETTINGS_H
#define RELAYTUNINGSETTINGS_H

// Object constants
#define RELAYTUNINGSETTINGS_OBJID 0xEA358166
#define RELAYTUNINGSETTINGS_ISSINGLEINST 1
#define RELAYTUNINGSETTINGS_ISSETTINGS 1
#define RELAYTUNINGSETTINGS_NUMBYTES 15

// Generic interface functions
int32_t RelayTuningSettingsInitialize();
UAVObjHandle RelayTuningSettingsHandle();
void RelayTuningSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float RateGain;
    float AttitudeGain;
    float Amplitude;
    uint8_t HysteresisThresh;
    uint8_t Mode;
    uint8_t Behavior;

} __attribute__((packed)) __attribute__((aligned(4))) RelayTuningSettingsData;

// Typesafe Object access functions
/**
 * @function RelayTuningSettingsGet(dataOut)
 * @brief Populate a RelayTuningSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t RelayTuningSettingsGet(RelayTuningSettingsData *dataOut) { return UAVObjGetData(RelayTuningSettingsHandle(), dataOut); }

static inline int32_t RelayTuningSettingsSet(const RelayTuningSettingsData *dataIn) { return UAVObjSetData(RelayTuningSettingsHandle(), dataIn); }

static inline int32_t RelayTuningSettingsInstGet(uint16_t instId, RelayTuningSettingsData *dataOut) { return UAVObjGetInstanceData(RelayTuningSettingsHandle(), instId, dataOut); }

static inline int32_t RelayTuningSettingsInstSet(uint16_t instId, const RelayTuningSettingsData *dataIn) { return UAVObjSetInstanceData(RelayTuningSettingsHandle(), instId, dataIn); }

static inline int32_t RelayTuningSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(RelayTuningSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t RelayTuningSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(RelayTuningSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t RelayTuningSettingsCreateInstance() { return UAVObjCreateInstance(RelayTuningSettingsHandle(), &RelayTuningSettingsSetDefaults); }

static inline void RelayTuningSettingsRequestUpdate() { UAVObjRequestUpdate(RelayTuningSettingsHandle()); }

static inline void RelayTuningSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(RelayTuningSettingsHandle(), instId); }

static inline void RelayTuningSettingsUpdated() { UAVObjUpdated(RelayTuningSettingsHandle()); }

static inline void RelayTuningSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(RelayTuningSettingsHandle(), instId); }

static inline int32_t RelayTuningSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(RelayTuningSettingsHandle(), dataOut); }

static inline int32_t RelayTuningSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(RelayTuningSettingsHandle(), dataIn); }

static inline int8_t RelayTuningSettingsReadOnly() { return UAVObjReadOnly(RelayTuningSettingsHandle()); }

static inline uint16_t RelayTuningSettingsGetNumInstances(){ return UAVObjGetNumInstances(RelayTuningSettingsHandle()); }

static inline uint32_t RelayTuningSettingsGetNumBytes(){ return UAVObjGetNumBytes(RelayTuningSettingsHandle()); }

// Field information
// Field RateGain information
// Field AttitudeGain information
// Field Amplitude information
// Field HysteresisThresh information
// Field Mode information
/* Enumeration options for field Mode */
typedef enum { RELAYTUNINGSETTINGS_MODE_RATE=0, RELAYTUNINGSETTINGS_MODE_ATTITUDE=1 }  __attribute__((packed)) RelayTuningSettingsModeOptions;
// Field Behavior information
/* Enumeration options for field Behavior */
typedef enum { RELAYTUNINGSETTINGS_BEHAVIOR_MEASURE=0, RELAYTUNINGSETTINGS_BEHAVIOR_COMPUTE=1, RELAYTUNINGSETTINGS_BEHAVIOR_SAVE=2 }  __attribute__((packed)) RelayTuningSettingsBehaviorOptions;


// set/Get functions
extern void RelayTuningSettingsRateGainSet( float *NewRateGain );
extern void RelayTuningSettingsRateGainGet( float *NewRateGain );
extern void RelayTuningSettingsAttitudeGainSet( float *NewAttitudeGain );
extern void RelayTuningSettingsAttitudeGainGet( float *NewAttitudeGain );
extern void RelayTuningSettingsAmplitudeSet( float *NewAmplitude );
extern void RelayTuningSettingsAmplitudeGet( float *NewAmplitude );
extern void RelayTuningSettingsHysteresisThreshSet( uint8_t *NewHysteresisThresh );
extern void RelayTuningSettingsHysteresisThreshGet( uint8_t *NewHysteresisThresh );
extern void RelayTuningSettingsModeSet( uint8_t *NewMode );
extern void RelayTuningSettingsModeGet( uint8_t *NewMode );
extern void RelayTuningSettingsBehaviorSet( uint8_t *NewBehavior );
extern void RelayTuningSettingsBehaviorGet( uint8_t *NewBehavior );


#endif // RELAYTUNINGSETTINGS_H

/**
 * @}
 * @}
 */
