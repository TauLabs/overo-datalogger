/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup RelayTuning RelayTuning
 * @brief The input to the relay tuning.
 *
 *
 * @file       relaytuning.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013
 * @brief      Include files for the RelayTuning object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: relaytuning.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef RELAYTUNING_H
#define RELAYTUNING_H

// Object constants
#define RELAYTUNING_OBJID 0xF6EE61BE
#define RELAYTUNING_ISSINGLEINST 1
#define RELAYTUNING_ISSETTINGS 0
#define RELAYTUNING_NUMBYTES 24

// Generic interface functions
int32_t RelayTuningInitialize();
UAVObjHandle RelayTuningHandle();
void RelayTuningSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float Period[3];
    float Gain[3];

} __attribute__((packed)) __attribute__((aligned(4))) RelayTuningData;

// Typesafe Object access functions
/**
 * @function RelayTuningGet(dataOut)
 * @brief Populate a RelayTuningData object
 * @param[out] dataOut 
 */
static inline int32_t RelayTuningGet(RelayTuningData *dataOut) { return UAVObjGetData(RelayTuningHandle(), dataOut); }

static inline int32_t RelayTuningSet(const RelayTuningData *dataIn) { return UAVObjSetData(RelayTuningHandle(), dataIn); }

static inline int32_t RelayTuningInstGet(uint16_t instId, RelayTuningData *dataOut) { return UAVObjGetInstanceData(RelayTuningHandle(), instId, dataOut); }

static inline int32_t RelayTuningInstSet(uint16_t instId, const RelayTuningData *dataIn) { return UAVObjSetInstanceData(RelayTuningHandle(), instId, dataIn); }

static inline int32_t RelayTuningConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(RelayTuningHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t RelayTuningConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(RelayTuningHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t RelayTuningCreateInstance() { return UAVObjCreateInstance(RelayTuningHandle(), &RelayTuningSetDefaults); }

static inline void RelayTuningRequestUpdate() { UAVObjRequestUpdate(RelayTuningHandle()); }

static inline void RelayTuningRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(RelayTuningHandle(), instId); }

static inline void RelayTuningUpdated() { UAVObjUpdated(RelayTuningHandle()); }

static inline void RelayTuningInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(RelayTuningHandle(), instId); }

static inline int32_t RelayTuningGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(RelayTuningHandle(), dataOut); }

static inline int32_t RelayTuningSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(RelayTuningHandle(), dataIn); }

static inline int8_t RelayTuningReadOnly() { return UAVObjReadOnly(RelayTuningHandle()); }

static inline uint16_t RelayTuningGetNumInstances(){ return UAVObjGetNumInstances(RelayTuningHandle()); }

static inline uint32_t RelayTuningGetNumBytes(){ return UAVObjGetNumBytes(RelayTuningHandle()); }

// Field information
// Field Period information
/* Array element names for field Period */
typedef enum { RELAYTUNING_PERIOD_ROLL=0, RELAYTUNING_PERIOD_PITCH=1, RELAYTUNING_PERIOD_YAW=2 } __attribute__((packed)) RelayTuningPeriodElem;
/* Number of elements for field Period */
#define RELAYTUNING_PERIOD_NUMELEM 3
// Field Gain information
/* Array element names for field Gain */
typedef enum { RELAYTUNING_GAIN_ROLL=0, RELAYTUNING_GAIN_PITCH=1, RELAYTUNING_GAIN_YAW=2 } __attribute__((packed)) RelayTuningGainElem;
/* Number of elements for field Gain */
#define RELAYTUNING_GAIN_NUMELEM 3


// set/Get functions
extern void RelayTuningPeriodSet( float *NewPeriod );
extern void RelayTuningPeriodGet( float *NewPeriod );
extern void RelayTuningGainSet( float *NewGain );
extern void RelayTuningGainGet( float *NewGain );


#endif // RELAYTUNING_H

/**
 * @}
 * @}
 */
