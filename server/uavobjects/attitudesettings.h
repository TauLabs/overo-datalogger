/**
 ******************************************************************************
 * @addtogroup UAVObjects UAVObject set for this firmware
 * @{
 * @addtogroup AttitudeSettings AttitudeSettings
 * @brief Settings for the @ref Attitude module used on CopterControl
 *
 *
 * @file       attitudesettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013
 * @brief      Include files for the AttitudeSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: attitudesettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ATTITUDESETTINGS_H
#define ATTITUDESETTINGS_H

// Object constants
#define ATTITUDESETTINGS_OBJID 0x2257CF36
#define ATTITUDESETTINGS_ISSINGLEINST 1
#define ATTITUDESETTINGS_ISSETTINGS 1
#define ATTITUDESETTINGS_NUMBYTES 38

// Generic interface functions
int32_t AttitudeSettingsInitialize();
UAVObjHandle AttitudeSettingsHandle();
void AttitudeSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float MagKp;
    float MagKi;
    float AccelKp;
    float AccelKi;
    float AccelTau;
    float VertPositionTau;
    float YawBiasRate;
    int16_t BoardRotation[3];
    uint8_t ZeroDuringArming;
    uint8_t BiasCorrectGyro;
    uint8_t FilterChoice;
    uint8_t TrimFlight;

} __attribute__((packed)) __attribute__((aligned(4))) AttitudeSettingsData;

// Typesafe Object access functions
/**
 * @function AttitudeSettingsGet(dataOut)
 * @brief Populate a AttitudeSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t AttitudeSettingsGet(AttitudeSettingsData *dataOut) { return UAVObjGetData(AttitudeSettingsHandle(), dataOut); }

static inline int32_t AttitudeSettingsSet(const AttitudeSettingsData *dataIn) { return UAVObjSetData(AttitudeSettingsHandle(), dataIn); }

static inline int32_t AttitudeSettingsInstGet(uint16_t instId, AttitudeSettingsData *dataOut) { return UAVObjGetInstanceData(AttitudeSettingsHandle(), instId, dataOut); }

static inline int32_t AttitudeSettingsInstSet(uint16_t instId, const AttitudeSettingsData *dataIn) { return UAVObjSetInstanceData(AttitudeSettingsHandle(), instId, dataIn); }

static inline int32_t AttitudeSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(AttitudeSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t AttitudeSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(AttitudeSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t AttitudeSettingsCreateInstance() { return UAVObjCreateInstance(AttitudeSettingsHandle(), &AttitudeSettingsSetDefaults); }

static inline void AttitudeSettingsRequestUpdate() { UAVObjRequestUpdate(AttitudeSettingsHandle()); }

static inline void AttitudeSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(AttitudeSettingsHandle(), instId); }

static inline void AttitudeSettingsUpdated() { UAVObjUpdated(AttitudeSettingsHandle()); }

static inline void AttitudeSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(AttitudeSettingsHandle(), instId); }

static inline int32_t AttitudeSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(AttitudeSettingsHandle(), dataOut); }

static inline int32_t AttitudeSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(AttitudeSettingsHandle(), dataIn); }

static inline int8_t AttitudeSettingsReadOnly() { return UAVObjReadOnly(AttitudeSettingsHandle()); }

static inline uint16_t AttitudeSettingsGetNumInstances(){ return UAVObjGetNumInstances(AttitudeSettingsHandle()); }

static inline uint32_t AttitudeSettingsGetNumBytes(){ return UAVObjGetNumBytes(AttitudeSettingsHandle()); }

// Field information
// Field MagKp information
// Field MagKi information
// Field AccelKp information
// Field AccelKi information
// Field AccelTau information
// Field VertPositionTau information
// Field YawBiasRate information
// Field BoardRotation information
/* Array element names for field BoardRotation */
typedef enum { ATTITUDESETTINGS_BOARDROTATION_ROLL=0, ATTITUDESETTINGS_BOARDROTATION_PITCH=1, ATTITUDESETTINGS_BOARDROTATION_YAW=2 } __attribute__((packed)) AttitudeSettingsBoardRotationElem;
/* Number of elements for field BoardRotation */
#define ATTITUDESETTINGS_BOARDROTATION_NUMELEM 3
// Field ZeroDuringArming information
/* Enumeration options for field ZeroDuringArming */
typedef enum { ATTITUDESETTINGS_ZERODURINGARMING_FALSE=0, ATTITUDESETTINGS_ZERODURINGARMING_TRUE=1 }  __attribute__((packed)) AttitudeSettingsZeroDuringArmingOptions;
// Field BiasCorrectGyro information
/* Enumeration options for field BiasCorrectGyro */
typedef enum { ATTITUDESETTINGS_BIASCORRECTGYRO_FALSE=0, ATTITUDESETTINGS_BIASCORRECTGYRO_TRUE=1 }  __attribute__((packed)) AttitudeSettingsBiasCorrectGyroOptions;
// Field FilterChoice information
/* Enumeration options for field FilterChoice */
typedef enum { ATTITUDESETTINGS_FILTERCHOICE_CCC=0, ATTITUDESETTINGS_FILTERCHOICE_PREMERLANI=1, ATTITUDESETTINGS_FILTERCHOICE_PREMERLANI_GPS=2 }  __attribute__((packed)) AttitudeSettingsFilterChoiceOptions;
// Field TrimFlight information
/* Enumeration options for field TrimFlight */
typedef enum { ATTITUDESETTINGS_TRIMFLIGHT_NORMAL=0, ATTITUDESETTINGS_TRIMFLIGHT_START=1, ATTITUDESETTINGS_TRIMFLIGHT_LOAD=2 }  __attribute__((packed)) AttitudeSettingsTrimFlightOptions;


// set/Get functions
extern void AttitudeSettingsMagKpSet( float *NewMagKp );
extern void AttitudeSettingsMagKpGet( float *NewMagKp );
extern void AttitudeSettingsMagKiSet( float *NewMagKi );
extern void AttitudeSettingsMagKiGet( float *NewMagKi );
extern void AttitudeSettingsAccelKpSet( float *NewAccelKp );
extern void AttitudeSettingsAccelKpGet( float *NewAccelKp );
extern void AttitudeSettingsAccelKiSet( float *NewAccelKi );
extern void AttitudeSettingsAccelKiGet( float *NewAccelKi );
extern void AttitudeSettingsAccelTauSet( float *NewAccelTau );
extern void AttitudeSettingsAccelTauGet( float *NewAccelTau );
extern void AttitudeSettingsVertPositionTauSet( float *NewVertPositionTau );
extern void AttitudeSettingsVertPositionTauGet( float *NewVertPositionTau );
extern void AttitudeSettingsYawBiasRateSet( float *NewYawBiasRate );
extern void AttitudeSettingsYawBiasRateGet( float *NewYawBiasRate );
extern void AttitudeSettingsBoardRotationSet( int16_t *NewBoardRotation );
extern void AttitudeSettingsBoardRotationGet( int16_t *NewBoardRotation );
extern void AttitudeSettingsZeroDuringArmingSet( uint8_t *NewZeroDuringArming );
extern void AttitudeSettingsZeroDuringArmingGet( uint8_t *NewZeroDuringArming );
extern void AttitudeSettingsBiasCorrectGyroSet( uint8_t *NewBiasCorrectGyro );
extern void AttitudeSettingsBiasCorrectGyroGet( uint8_t *NewBiasCorrectGyro );
extern void AttitudeSettingsFilterChoiceSet( uint8_t *NewFilterChoice );
extern void AttitudeSettingsFilterChoiceGet( uint8_t *NewFilterChoice );
extern void AttitudeSettingsTrimFlightSet( uint8_t *NewTrimFlight );
extern void AttitudeSettingsTrimFlightGet( uint8_t *NewTrimFlight );


#endif // ATTITUDESETTINGS_H

/**
 * @}
 * @}
 */
